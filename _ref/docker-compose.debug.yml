services:
  # KeyDB - High-performance Redis fork
  keydb:
    image: eqalpha/keydb:latest
    container_name: spinforge-keydb
    restart: unless-stopped
    ports:
      - "9000:16378"
    volumes:
      - keydb-data:/data
    environment:
      - KEYDB_PASSWORD=${REDIS_PASSWORD:-spinforge123}
    command: keydb-server --appendonly yes --requirepass ${REDIS_PASSWORD:-spinforge123} --save 60 1 --save 300 10
    networks:
      - spinforge-network
    healthcheck:
      test:
        ["CMD", "keydb-cli", "-a", "${REDIS_PASSWORD:-spinforge123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SpinHub - Debug mode with inspector
  spinhub:
    image: node:20-alpine
    container_name: spinforge-hub-debug
    working_dir: /spinforge
    restart: unless-stopped
    ports:
      - "9004:8080"
      - "9229:9229" # Node.js debug port
    environment:
      - NODE_ENV=development
      - REDIS_HOST=keydb
      - REDIS_PORT=16378
      - REDIS_PASSWORD=${REDIS_PASSWORD:-spinforge123}
      - PORT=8080
      - HOST=0.0.0.0
      - LOG_LEVEL=debug
      - ADMIN_TOKEN=${ADMIN_TOKEN:-changeMe123}
      - RATE_LIMIT_GLOBAL=${RATE_LIMIT_GLOBAL:-10000}
      - RATE_LIMIT_CUSTOMER=${RATE_LIMIT_CUSTOMER:-1000}
      - PORT_START=30000
      - PORT_END=40000
      - DEFAULT_MEMORY_LIMIT=512MB
      - DEFAULT_CPU_LIMIT=0.5
    volumes:
      - ./:/spinforge
      - builds-data:/spinforge/builds
      - logs-data:/spinforge/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      keydb:
        condition: service_healthy
    networks:
      - spinforge-network
    command: sh -c "apk add --no-cache git python3 make g++ docker-cli && npm install -g typescript && cd /spinforge && rm -f package-lock.json && mv package.json package.json.bak || true && cd packages/shared && npm install && npm run build || true && cd ../spinlet-core && npm install && npm run build || true && cd ../spinlet-hub && npm install && npm run build || true && node --inspect=0.0.0.0:9229 dist/server.js"

  # Builder Service - Debug mode
  builder:
    image: node:20-alpine
    container_name: spinforge-builder-debug
    working_dir: /spinforge
    restart: unless-stopped
    ports:
      - "9230:9230" # Builder debug port
    environment:
      - NODE_ENV=development
      - REDIS_HOST=keydb
      - REDIS_PORT=16378
      - REDIS_PASSWORD=${REDIS_PASSWORD:-spinforge123}
      - BUILD_CACHE_DIR=/spinforge/cache
      - BUILD_OUTPUT_DIR=/spinforge/builds
    volumes:
      - ./:/spinforge
      - builds-data:/spinforge/builds
      - build-cache:/spinforge/cache
      - ./apps:/spinforge/apps:ro
    depends_on:
      - keydb
    networks:
      - spinforge-network
    command: sh -c "apk add --no-cache git python3 make g++ docker-cli && npm install -g typescript && cd /spinforge && cd packages/shared && npm install && npm run build || true && cd ../spinlet-core && npm install && npm run build || true && cd ../spinlet-builder && npm install && npm run build || true && node --inspect=0.0.0.0:9230 dist/service.js"

  # Nginx - Reverse proxy and SSL termination
  nginx:
    image: nginx:alpine
    container_name: spinforge-nginx
    restart: unless-stopped
    ports:
      - "9006:80"
      - "9007:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy_params.conf:/etc/nginx/proxy_params.conf:ro
      - ./data/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - spinhub
    networks:
      - spinforge-network

  # Management UI
  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: spinforge-ui
    restart: unless-stopped
    ports:
      - "9010:80"
    depends_on:
      - spinhub
    networks:
      - spinforge-network
    environment:
      - NODE_ENV=development

networks:
  spinforge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  keydb-data:
    driver: local
  builds-data:
    driver: local
  build-cache:
    driver: local
  logs-data:
    driver: local
  nginx-logs:
    driver: local
