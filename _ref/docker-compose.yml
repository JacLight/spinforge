version: '3.8'

services:
  # KeyDB - High-performance Redis alternative
  keydb:
    image: eqalpha/keydb:latest
    container_name: spinforge-keydb
    restart: unless-stopped
    ports:
      - "9000:16378"
    volumes:
      - keydb-data:/data
    command: keydb-server --appendonly yes --protected-mode no --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spinforge-network

  # OpenResty Gateway - Handles all HTTP traffic
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    container_name: spinforge-gateway
    restart: unless-stopped
    ports:
      - "9006:80"
      - "9007:443"
    volumes:
      - ./openresty-minimal.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ./lua:/etc/nginx/lua:ro
      - ./proxy_params.conf:/etc/nginx/proxy_params.conf:ro
      - ./data/ssl:/etc/nginx/ssl:ro
      - ./web_root:/web_root:ro
      - gateway-logs:/var/log/nginx
    depends_on:
      - keydb
      - spinhub
    environment:
      - REDIS_HOST=keydb
      - REDIS_PORT=16378
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - spinforge-network

  # SpinHub - Management and deployment server
  spinhub:
    build:
      context: .
      dockerfile: Dockerfile.hub
    container_name: spinforge-hub
    restart: unless-stopped
    ports:
      - "9004:8080"  # Admin access only
    volumes:
      - ./deployments:/spinforge/deployments
      - ./builds:/spinforge/builds
      - ./web_root:/spinforge/web_root
      - spinlet-data:/data/spinlets
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - REDIS_URL=redis://keydb:16378
      - REDIS_HOST=keydb
      - REDIS_PORT=16378
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - PORT=8080
      - HOST=0.0.0.0
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ADMIN_TOKEN=${ADMIN_TOKEN:-changeThisAdminToken456}
      - DEPLOYMENT_PATH=/spinforge/deployments
      - BUILD_PATH=/spinforge/builds
      - WEB_ROOT_PATH=/spinforge/web_root
      - DATA_DIR=/data
      - SPINLET_STARTUP_TIMEOUT_MS=${SPINLET_STARTUP_TIMEOUT_MS:-300000}
      - SPINLET_IDLE_TIMEOUT_MS=${SPINLET_IDLE_TIMEOUT_MS:-300000}
      - ENABLE_HOT_DEPLOYMENT=${ENABLE_HOT_DEPLOYMENT:-true}
      - DOCKER_HOST=unix:///var/run/docker.sock
    depends_on:
      - keydb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/_health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spinforge-network

  # Builder - Handles app builds
  builder:
    build:
      context: .
      dockerfile: Dockerfile.builder
    container_name: spinforge-builder
    restart: unless-stopped
    volumes:
      - ./builds:/spinforge/builds
      - ./deployments:/spinforge/deployments
      - build-cache:/root/.npm
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
      - BUILD_PATH=/spinforge/builds
      - DEPLOYMENT_PATH=/spinforge/deployments
    networks:
      - spinforge-network

  # UI - Management interface
  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: spinforge-ui
    restart: unless-stopped
    ports:
      - "9010:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:9004
      - VITE_WEBSOCKET_URL=ws://localhost:9004
    depends_on:
      - spinhub
    networks:
      - spinforge-network

  # Monitoring Stack (Optional - comment out if not needed)
  prometheus:
    image: prom/prometheus:latest
    container_name: spinforge-prometheus
    restart: unless-stopped
    ports:
      - "9008:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - spinforge-network

  grafana:
    image: grafana/grafana:latest
    container_name: spinforge-grafana
    restart: unless-stopped
    ports:
      - "9009:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - spinforge-network

volumes:
  keydb-data:
  spinlet-data:
  build-cache:
  gateway-logs:
  prometheus-data:
  grafana-data:

networks:
  spinforge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16