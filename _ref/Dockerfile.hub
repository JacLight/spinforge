# SpinForge - Open Source Hosting Platform
# Copyright (c) 2025 Jacob Ajiboye
# Licensed under the MIT License

# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY lerna.json ./
COPY tsconfig.json ./
COPY packages/shared/package*.json ./packages/shared/
COPY packages/spinlet-core/package*.json ./packages/spinlet-core/
COPY packages/spinlet-hub/package*.json ./packages/spinlet-hub/

# Install dependencies
RUN npm install --workspaces --include-workspace-root

# Copy source code
COPY packages/shared ./packages/shared
COPY packages/spinlet-core ./packages/spinlet-core
COPY packages/spinlet-hub ./packages/spinlet-hub

# Build all packages
RUN npm run build

# Runtime stage
FROM node:20-alpine

WORKDIR /spinforge

# Install production dependencies
COPY package*.json ./
COPY lerna.json ./
COPY packages/shared/package*.json ./packages/shared/
COPY packages/spinlet-core/package*.json ./packages/spinlet-core/
COPY packages/spinlet-hub/package*.json ./packages/spinlet-hub/

RUN npm install --workspaces --include-workspace-root --omit=dev

# Copy built files
COPY --from=builder /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder /app/packages/spinlet-core/dist ./packages/spinlet-core/dist
COPY --from=builder /app/packages/spinlet-hub/dist ./packages/spinlet-hub/dist

# Create directories for spinlets
RUN mkdir -p /spinforge/builds /spinforge/data /spinforge/logs

# Set environment
ENV NODE_ENV=production

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/_health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"

# Run SpinHub
CMD ["node", "packages/spinlet-hub/dist/server.js"]