# SpinForge - AI-Native Zero Configuration Hosting & Application Infrastructure
# Copyright (c) 2025 Jacob Ajiboye
# Licensed under the MIT License
# 
# CEPH-ENABLED VERSION FOR HIGH AVAILABILITY

services:
  keydb:
    image: eqalpha/keydb:latest
    container_name: spinforge-keydb
    restart: unless-stopped
    volumes:
      - keydb-data:/data
    environment:
      - KEYDB_PASSWORD=${REDIS_PASSWORD:-}
    command: keydb-server --appendonly yes --protected-mode no --port 16378
    networks:
      spinforge:
        ipv4_address: 172.18.0.10
    healthcheck:
      test: ["CMD", "keydb-cli", "-p", "16378", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  openresty:
    build:
      context: ./hosting/openresty
      dockerfile: Dockerfile
    container_name: spinforge-openresty
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8082:8081"
    env_file:
      - .env
    environment:
      - REDIS_HOST=spinforge-keydb
      - REDIS_PORT=16378
      - REDIS_DB=1
    volumes:
      # Config files - kept local for performance
      - ./hosting/openresty/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ./hosting/openresty/lua:/etc/openresty/lua:ro
      # Data directory - single mount point
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}:/data
      # Map cert paths for compatibility
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}/certs:/etc/letsencrypt
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}/certbot-webroot:/var/www/certbot
      - openresty-logs:/var/log/nginx
    networks:
      spinforge:
        ipv4_address: 172.18.0.11
    depends_on:
      keydb:
        condition: service_healthy

  api:
    build:
      context: ./hosting/api
      dockerfile: Dockerfile
    container_name: spinforge-api
    restart: unless-stopped
    labels:
      - "spinforge.domain=api.spinforge.dev"
      - "spinforge.port=8080"
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - PORT=${API_PORT}
      - DATA_ROOT=/data
      - STATIC_ROOT=/data/static
      - REDIS_HOST=spinforge-keydb
      - REDIS_PORT=16378
      - REDIS_DB=1
    volumes:
      # Single data mount point
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      spinforge:
        ipv4_address: 172.18.0.12
    depends_on:
      keydb:
        condition: service_healthy
      openresty:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  certbot:
    image: certbot/certbot:latest
    container_name: spinforge-certbot
    restart: unless-stopped
    volumes:
      # Certificate paths
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}/certs:/etc/letsencrypt
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}/certbot-webroot:/var/www/certbot
      - ${SPINFORGE_DATA_ROOT:-./hosting/data}/certbot-logs:/var/log/letsencrypt
      - ./hosting/scripts:/scripts:ro
    networks:
      spinforge:
        ipv4_address: 172.18.0.13
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --deploy-hook \"chmod -R 755 /etc/letsencrypt/live /etc/letsencrypt/archive\"; sleep 12h & wait $${!}; done;'"

  admin-ui:
    build:
      context: ./apps/admin-ui
      dockerfile: Dockerfile
    container_name: spinforge-admin-ui
    restart: unless-stopped
    labels:
      - "spinforge.domain=admin.spinforge.dev"
      - "spinforge.port=80"
    ports:
      - "8083:80"
    networks:
      spinforge:
        ipv4_address: 172.18.0.14
    depends_on:
      api:
        condition: service_started
      keydb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  website:
    build:
      context: ./apps/website
      dockerfile: Dockerfile
    container_name: spinforge-website
    restart: unless-stopped
    ports:
      - "8084:3000"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    networks:
      spinforge:
        ipv4_address: 172.18.0.15
    depends_on:
      api:
        condition: service_started
      keydb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: spinforge-mcp
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - SPINFORGE_API_URL=http://api:8080/api
      - PORT=3000
    networks:
      - spinforge
    depends_on:
      - api

volumes:
  keydb-data:
  openresty-logs:

networks:
  spinforge:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1
