# SpinForge Monitoring Stack
# Grafana + Prometheus + Loki for comprehensive monitoring

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: spinforge-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - spinforge

  loki:
    image: grafana/loki:latest
    container_name: spinforge-loki
    restart: unless-stopped
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - spinforge

  promtail:
    image: grafana/promtail:latest
    container_name: spinforge-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - spinforge
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: spinforge-grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    networks:
      - spinforge
    depends_on:
      - prometheus
      - loki

  # Node exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: spinforge-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - spinforge

  # Redis exporter for KeyDB metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: spinforge-redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=keydb:16378
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    ports:
      - "9121:9121"
    networks:
      - spinforge
    depends_on:
      - keydb

  # Nginx exporter for OpenResty metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: spinforge-nginx-exporter
    restart: unless-stopped
    command:
      - '-nginx.scrape-uri=http://openresty:8081/nginx_status'
    ports:
      - "9113:9113"
    networks:
      - spinforge
    depends_on:
      - openresty

volumes:
  prometheus-data:
  loki-data:
  grafana-data:

networks:
  spinforge:
    external: true